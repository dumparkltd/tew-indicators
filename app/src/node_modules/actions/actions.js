var log       = require('debug')('actions:index')
var isArray   = require('isarray')
var contains  = require('lodash.contains')
var clone     = require('lodash.clone')
var qs        = require('qs')
var log       = require('debug')('actions')

var c = {

  STORES: {
    LOAD_DATA: "STORES:LOAD_DATA"
  },

  ROUTE: {
    TRANSITION: "ROUTE:TRANSITION",
    GROUP: {
      SELECT: "ROUTE:GROUP:SELECT"
    },
    QUERY: {
      REPLACE: "ROUTE:QUERY:REPLACE",
      UPDATE: "ROUTE:QUERY:UPDATE"
    },
    PATH: {
      UPDATE: "ROUTE:PATH:UPDATE"
    },
    PARAMS: {
      UPDATE: "ROUTE:PARAMS:UPDATE"
    }
  },

  GROUP: {
    SELECT: "GROUP:SELECT"
  }

};

var methods = {

  stores: {
    loadData: function () {
      this.dispatch(c.STORES.LOAD_DATA)
    }
  },

  issue: {
    select : function(issueSlug){
      this.dispatch(c.ROUTE.TRANSITION, { route: 'issue', params: {issueSlug:issueSlug}});
    }
  },
  indicator: {
    select : function(indicatorSlug){
      this.dispatch(c.ROUTE.TRANSITION, { route: 'indicator', params: {indicatorSlug:indicatorSlug}});
    }
  },
  routes: {
    transition: function (path, params, query) {
      this.dispatch(c.ROUTE.TRANSITION, { path: path, params: params, query: query });
    },

    pop: function (queryString) {
      log('pop', queryString)
      var query = qs.parse(queryString)
      log('query', query)
      this.dispatch(c.ROUTE.QUERY.REPLACE, { query: query })
    }

  },



  group: {
    //DEPRECATED
    selectChange: function (groupType, selectedValues, currentQuery) {
      if (!isArray(selectedValues)) throw new Error('selectedValues must be an array')
      //NOTE: rm currentQuery from here. Abstract to
      var query = clone(currentQuery)
      log('query', query)
      log('selectedValues', selectedValues)
      log('groupType', groupType)

      query[groupType] = selectedValues.join(',')
      //NOTE should be groupType update -> routestore knows 'the query'
      this.dispatch(c.ROUTE.TRANSITION, { query: query })
    },

    update: function (groupType, values) {
      if (!isArray(values)) throw new Error('values must be an array')
      this.dispatch(c.ROUTE.QUERY.UPDATE, { field: groupType, values: values })
    }



  }
};

module.exports = {
  methods: methods,
  constants: c
};
