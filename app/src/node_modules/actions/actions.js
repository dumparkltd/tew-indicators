
var _         = require('lodash')
var log       = require('debug')('actions')

var c = {

  ROUTE: {
    TRANSITION: "ROUTE:TRANSITION",
    GROUP: {
      SELECT: "ROUTE:GROUP:SELECT"
    },
    QUERY: {
      FIELD_REPLACE: "ROUTE:QUERY:FIELD_REPLACE",
      REPLACE: "ROUTE:QUERY:REPLACE",
      UPDATE: "ROUTE:QUERY:UPDATE",
      TOGGLE: "ROUTE:QUERY:TOGGLE",
      DIMENSION_UPDATE: "ROUTE:QUERY:DIMENSION_UPDATE"
    },
    PATH: {
      UPDATE: "ROUTE:PATH:UPDATE"
    },
    PARAMS: {
      UPDATE: "ROUTE:PARAMS:UPDATE"
    }
  },
  LINECHART : {
    HIGHLIGHTGROUP : "LINECHART:HIGHLIGHTGROUP",
    UNHIGHLIGHTGROUP : "LINECHART:UNHIGHLIGHTGROUP",
    HIGHLIGHTDATASET : "LINECHART:HIGHLIGHTDATASET",
    UNHIGHLIGHTDATASET : "LINECHART:UNHIGHLIGHTDATASET"
  }

};

var methods = {
  navPage: function (page){
    log('navPage', page)
    if (page === 'home') {
      this.dispatch(c.ROUTE.TRANSITION, { route: '/' })
    } else {
      // TODO navigate to about and share pages
      this.dispatch(c.ROUTE.TRANSITION, { route: '/' + page })
    }

  },

  issue: {
    select : function (issueSlug) {
      this.dispatch(c.ROUTE.TRANSITION, { route: 'issue', params: { issueSlug: issueSlug } });
    }
  },

  indicator: {
    select : function (indicatorSlug) {
      this.dispatch(c.ROUTE.TRANSITION, { route: 'indicator', params: { indicatorSlug:indicatorSlug }});
    },
    toggleFilter: function (field, value) {
      log('toggleFilter', field, value)
      this.dispatch(c.ROUTE.QUERY.TOGGLE, { field: field, value: value })
    },
    selectFilter: function (field, value) {
      log('selectFilter', field, value)
      this.dispatch(c.ROUTE.QUERY.FIELD_REPLACE, { field: field, value: value })
    },
    selectDimension: function (dimension, value) {
      log('selectDimension', dimension, value)
      this.dispatch(c.ROUTE.QUERY.DIMENSION_UPDATE, { field: dimension, value: value })
    },
    sortBy: function (value) {
      this.dispatch(c.ROUTE.QUERY.FIELD_REPLACE, { field: 'sortBy', value: value })
    },
    lineChart : {
      highlightGroup : function(group){
        this.dispatch(c.LINECHART.HIGHLIGHTGROUP, { group: group })
      },
      unHighlightGroup : function(){
        this.dispatch(c.LINECHART.UNHIGHLIGHTGROUP, { })
      },
      highlightDataset : function(datasetId){
        this.dispatch(c.LINECHART.HIGHLIGHTDATASET, { datasetId: datasetId })
      },
      unHighlightDataset : function(){
        this.dispatch(c.LINECHART.UNHIGHLIGHTDATASET, { })
      }
    }

  },
};

module.exports = {
  methods: methods,
  constants: c
};
