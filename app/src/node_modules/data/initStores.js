var Tabletop        = require('tabletop').Tabletop
var Promise         = require('promise')
var log             = require('debug')('data:initStores')

var DataStore           = require('stores/data-store'),
    DataBreakdownStore  = require('stores/data-breakdown-store'),
    DataGroupStore      = require('stores/data-group-store'),
    DataSourceStore     = require('stores/data-source-store'),
    DataTypeStore       = require('stores/data-type-store'),
    IndicatorStore      = require('stores/indicator-store'),
    IssueStore          = require('stores/issue-store'),
    RecommendationStore = require('stores/recommendation-store'),
    RouteStore          = require("stores/route-store")

var pathname = (window.history && window.history.state) ? window.history.state.path : '/'

var public_spreadsheet_url = 'https://docs.google.com/a/enspiral.com/spreadsheets/d/1nmW8b_2HDgMzvuyllWCSV2hc8uUpyNrTT0WAC_7MnhE/pub?hl=en_US&hl=en_US&output=html#';

window.Tabletop = Tabletop

var fetchData = function (router, callback) {
  function initStores (data, tabletop) {
    log('initStores', data, tabletop)
    var stores = {
      data: new DataStore({ data: data.data.elements }),
      dataBreakdowns: new DataBreakdownStore({ data: data.data_breakdowns.elements }),
      dataGroups: new DataGroupStore({ data: data.data_groups.elements }),
      dataSources: new DataSourceStore({ data: data.data_sources.elements }),
      dataTypes: new DataTypeStore({ data: data.data_types.elements }),
      indicators: new IndicatorStore({ data: data.indicators.elements }),
      issues: new IssueStore({ data: data.issues.elements }),
      recommendations: new RecommendationStore({ data: data.recommendations.elements }),
      routes: new RouteStore({ router: router, pathname: pathname  })
    }

    callback(null, stores)
  }

  var tabletop = Tabletop.init( {
    key: '1nmW8b_2HDgMzvuyllWCSV2hc8uUpyNrTT0WAC_7MnhE',
    callback: initStores,
    // proxy: "http://tewdata.s3.amazonaws.com/",
    parseNumbers : true,
    // debug: true
  })
}

//
module.exports = Promise.denodeify(fetchData)
