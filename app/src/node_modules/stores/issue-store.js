var Fluxxor = require("fluxxor");

var _       = require('lodash')

var log     = require('debug')(':stores:issue-store')
var slug    = require('to-slug-case')
var sanitise  = require('utils/sanitise')


var IssueStore = Fluxxor.createStore({
  initialize: function(options) {
    this.name = options.sheet
    this.data = []
    this.loading = false
    this.loadData = options.loadData
    //construct and call our load data closure
    this.loadData(options.key, options.sheet, this.loadDataSuccess)()
    this.loading = true
  },

  loadDataSuccess: function (data) {
    log('success', data)

    this.data = _.sortBy(sanitise(data[this.name].elements), function (d) { return d.displayorder })

    this.makeSlugs()
    this.loading = false
    this.emit('change')
  },

  isLoading : function(){
    return this.loading
  },

  makeSlugs: function () {
  // strips out punctuation and transform first 5 words into slug-case http://stackoverflow.com/a/4328546
    var space = / /g

    _.each(this.data, function (d) {
      d.slug = slug(
        d.title
          .replace(/[^\w\s]|_/g, '')
          .replace(/\s+/g, ' ')
          .split(space)
          .slice(0, 5)
          .join(' ')
      )

//      log('slug', d.slug, d.title)
    })
  },


  // loadDataFailure: function (error) {
  //   //
  // },

  //match: func, obj: -> datum
  findOne: function (match) {
    return _.find(this.data, match)
  },


  query: function (match) {
    //TODO more query methods
    log('match', match)
    if (!match) return  this.data
    return _.where(this.data, match)
  }

});

module.exports = IssueStore;
