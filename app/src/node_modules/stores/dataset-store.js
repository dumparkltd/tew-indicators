var Fluxxor = require("fluxxor");
var actions = require("actions");
var each    = require('lodash.foreach')
var filter  = require('lodash.filter')
var findOne = require('lodash.find')
var where   = require('lodash.where')
var log     = require('debug')('stores:dataset-store')
var slug    = require('slug')
slug.defaults.mode = 'rfc3986'



var DatasetStore = Fluxxor.createStore({
  initialize: function(options) {
    this.name = options.sheet
    this.data = []
    this.loading = false
    this.loadData = options.loadData
    //construct and call our load data closure
    this.loadData(options.key, options.sheet, this.loadDataSuccess)()
    this.loading = true
  },

  loadDataSuccess: function (data) {
    log('success', data)
    this.data = data[this.name].elements
    this.loading = false
    this.emit('change')
  },
  isLoading : function(){
    return this.loading
  },

  // loadDataFailure: function (error) {
  //   //
  // },

  // match: object: -> array
  query: function (match) {
    //TODO more query methods
    log('match', match)
    if (!match) return  this.data
    return where(this.data, match)
  },

  //match: func, obj: -> datum
  findOne: function (match) {
    log('findOne', match, findOne(this.data, match))
    return findOne(this.data, match)
  },

  //filterFunc: function: -> array
  filter: function (filterFunc) {
    return filter(this.data, filterFunc)
  },

  //NOTE: methods used if routeStore waitsFor for ethnicityStore to update

  // getState: function () {
  //   return {
  //     selected: this.selected
  //   }
  // },

  // handleSelectEthnicity: function (payload) {
  //   this.selected = where(this.data, { id: payload.ethnicity })
  // }


});

module.exports = DatasetStore;
