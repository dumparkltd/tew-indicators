var Fluxxor = require("fluxxor");
var actions = require("actions");
var filter  = require('lodash.filter');
var where   = require('lodash.where');
var log     = require('debug')(':stores:recommendation-store')

var RecommendationStore = Fluxxor.createStore({
  initialize: function(options) {
    this.data = []
    this.loading = false
    this.loadData = options.loadData
    //construct and call our load data closure
    this.loadData(options.key, options.sheet, this.loadDataSuccess)()
    this.loading = true
  },

  loadDataSuccess: function (data) {
    log('success', data)
    this.data = data
    this.loading = false
    this.emit('change')
  },

  // loadDataFailure: function (error) {
  //   //
  // },


  query: function (match) {
    //TODO more query methods
    if (!match) return  this.data
    return where(this.data, match)
  }

  //NOTE: methods used if routeStore waitsFor for SOGIIStore to update

  // getState: function () {
  //   return {
  //     selected: this.selected
  //   }
  // },

  // handleSelectSOGII: function (payload) {
  //   this.selected = where(this.data, { id: payload.SOGII })
  // }


});

module.exports = RecommendationStore;
