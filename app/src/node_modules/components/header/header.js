//main
var React       = require('react')

//helpers
var _           = require('lodash')

var Grid            = require('react-bootstrap/lib/Grid')
var Nav             = require('react-bootstrap/lib/Nav')
var Navbar          = require('react-bootstrap/lib/Navbar')
var NavItem         = require('react-bootstrap/lib/NavItem')
var ShareModal      = require('components/share-modal')


//logging
var log         = require('debug')('components:header')

module.exports = React.createClass({

  propTypes: {
    currentHREF : React.PropTypes.string,
    route       : React.PropTypes.string,
    title       : React.PropTypes.string,
    subtitle    : React.PropTypes.string,
    flux        : React.PropTypes.object,
  },

  getInitialState: function () {
    return {
      hideShareModal: true
    }
  },

  render: function () {
    log('props', this.props, window.location)

    var Brand = this.isIntro() ? (
      <div className='header-logo'>
        <a className="icon-hrc-logo " href="http://hrc.co.nz" target="_blank"></a>
      </div>
    ) : (
      <div className='header-logo'>
        <a className="icon-hrc-logo-sm " href="http://hrc.co.nz" target="_blank"></a>
      </div>
    )

    var Title = (
      (this.isIntro()) ? null :
        <NavItem className='hrc-title-item' onClick={this.handleNavClick('home')} >
          <h1 className="hrc-title">{this.props.title}</h1>
          <div className="hrc-subtitle">{this.props.subtitle}</div>
        </NavItem>
    )
      
      
    var aboutClass =  'nav-item-about'
    var shareClass =  'nav-item-share'
    var tweet = "The #TrackingEquality web-tool from @NZHumanRights shows which groups are getting a fair go at work & which aren't "
    var title = "Human Rights Commission: Tracking Equality at Work webtool"
    var rootURI = window.location.protocol+'//'+window.location.host+'/'
    var encodedRootURI = encodeURIComponent(rootURI)
    var facebookShare = "https://www.facebook.com/sharer/sharer.php?u=" + encodedRootURI
    var twitterShare = "https://twitter.com/intent/tweet?status=" + encodeURIComponent(tweet) + " " + encodedRootURI
    var linkedinShare = "https://www.linkedin.com/shareArticle?mini=true&url=" + encodedRootURI + "&title=" + encodeURIComponent(title)
    
    var RightNav = (this.isIntro()) ? 
      <Nav right >
        <div className="header-claim">
          <a className="icon-hrc-claim " href="http://hrc.co.nz" target="_blank"></a>
        </div>
      </Nav>
     : [
      <Nav className="nav-group nav-group-share" right>
        <NavItem href={facebookShare} className="share-header-social share-header-social-facebook"  target="_blank">
          <div className="icon-social-facebook-sm"/>
        </NavItem>
        <NavItem href={twitterShare} className="share-header-social share-header-social-twitter"  target="_blank">
          <div className="icon-social-twitter-sm"/>
        </NavItem>
        <NavItem href='#' className={shareClass} onClick={this.toggleShareModal()} >
          <span className="icon-social-share"/>
          Share
        </NavItem>
      </Nav>,
      <Nav className="nav-group nav-group-about" right>
        <NavItem href='#' className={aboutClass} onClick={this.handleNavClick('about')}>
          About
        </NavItem>
      </Nav>      
     ]
    
    var headerClass = this.isIntro() ? 'header-intro navbar-tew-wrapper' : 'navbar-tew-wrapper'



    return (
        <div className={headerClass}>
          <Navbar className='navbar-tew' brand={Brand}>
            <Nav>
              {Title}
            </Nav>
            { RightNav }
          </Navbar>
          <ShareModal
            currentHREF={this.props.currentHREF}
            shouldHide={this.state.hideShareModal}
            facebookShare = {facebookShare}
            twitterShare = {twitterShare}
            linkedinShare = {linkedinShare}
            toggleShareModal={this.toggleShareModal} />
        </div>

    )
  },
          
  isIntro : function(){
    return this.props.route === 'intro'
  },
  
  handleNavClick: function (page) {
    var flux = this.props.flux

    return function (e) {
      e.preventDefault()
      flux.actions.navPage(page)
    }
  },

  toggleShareModal: function () {
    log('init')
    var self = this
    return function (e) {
      e.preventDefault()
      self.setState({ hideShareModal: !self.state.hideShareModal })
    }
  }
})
