var React           = require('react')

var Col = require('react-bootstrap/lib/Col')
var Range = require('./indicator-preview-range')
var Totals = require('./indicator-preview-totals')
var Custom = require('./indicator-preview-custom')

var log       = require('debug')('src:components:issue:indicator-preview')

module.exports = React.createClass({

  propTypes: {
    title: React.PropTypes.string,
    slug: React.PropTypes.string,
    type: React.PropTypes.string,
    data: React.PropTypes.array,
    showLinchartIcon: React.PropTypes.bool,
    date: React.PropTypes.object,
    total: React.PropTypes.string,
    previewfact: React.PropTypes.string,
  },

  render: function () {
    log('props', this.props)
    var title = this.props.title
    var slug = this.props.slug
    var type  = this.props.type

    return (
        <Col xs={12} md={12/this.props.cols}>
          <a href="#" className="indicator-preview-tile"
             onClick={this.handleIndicatorClick(slug)}>
            <div className={'indicator-preview-header'}>
              <p className="emphasis"><strong>{title}</strong></p>
            </div>
            <div className={'indicator-preview-main'}>
            { (type === 'range')
              ? <Range
                  date={this.props.date}
                  data  = {this.props.data}
                />
              : (type === 'totals')
                ? <Totals
                  total={this.props.total}
                  previewfact={this.props.previewfact}
                  date={this.props.date}
                />
                : <Custom
                  previewfact={this.props.previewfact}
                  date={this.props.date}
                />
            }
            </div>
            <div className='indicator-preview-footer'>
              <ul className={'list-inline'}>
                <li>
                  <h4>Explore Data</h4>
                </li>
                {
                  this.props.showLinchartIcon ? (
                    <li className='pull-right'>
                      <div className='indicator-preview-icon-wrap'>
                        <div className="icon-linechart"></div>
                      </div>
                    </li>
                  ) : null
                }
                <li className='pull-right'>
                  <div className='indicator-preview-icon-wrap'>
                    <div className="icon-barchart"></div>
                  </div>
                </li>
              </ul>
            </div>
          </a>
        </Col>
    )
  },



  handleIndicatorClick: function (indicatorSlug) {
    var flux = this.props.flux
    return function (e) {
      e.preventDefault()
      flux.actions.indicator.select(indicatorSlug)
    }
  }
})
