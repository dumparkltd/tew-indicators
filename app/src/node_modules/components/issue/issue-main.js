var React           = require('react')

var Grid 				    = require('react-bootstrap/lib/Grid')
var Row 				    = require('react-bootstrap/lib/Row')
var Col 				    = require('react-bootstrap/lib/Col')
var truncateText    = require('utils/truncate-text')

//helpers
var marked      = require('utils/parse-markdown')


module.exports = React.createClass({

  getInitialState: function () {
    return {
      mainCollapsed: true
    }
  },

  componentWillReceiveProps: function (nextProps) {
    //collapse main text when switching between indicators
    if (!this.state.mainCollapsed && nextProps.id !== this.props.id) {
      this.setState({ mainCollapsed: true })
    }
  },

  render: function () {
    var ShowMore = (
      <div className="show-more">
        <a href="#" onClick={this.toggleMain}>{this.state.mainCollapsed ? 'Show more' : 'Show less'}</a>
      </div>
    )

    var commentary = truncateText(this.props.commentary, 150, !this.state.mainCollapsed)
    var about = truncateText(this.props.about, 75, !this.state.mainCollapsed)

    return (
      <div>
        <Row className='issue-header'>
          <Col md={12} xs={12}>
            <h5 className='text-uppercase'> Issue </h5>
            <h1 className='issue-title'> {this.props.title} </h1>
          </Col>
        </Row>
        <Row className='issue-main'>
          <Col md={8} xs={8}>
            <h5 className='text-uppercase'> Analysis </h5>
            <div className="marked-inner-html" dangerouslySetInnerHTML={{
                __html: marked(commentary.text, {sanitize: true})
              }} ></div>
            { (commentary.showLink) ? ShowMore : null }
          </Col>
          <Col md={4} xs={4}>
            <h5 className={"text-uppercase"}> About this issue </h5>
            <div className='small marked-inner-html' dangerouslySetInnerHTML={{
              __html: marked(about.text, {sanitize: true})
            }} ></div>
            { (about.showLink) ? ShowMore : null }
          </Col>
        </Row>
        </div>
    )
  },

  toggleMain: function (e) {
    e.preventDefault()
    this.setState({ mainCollapsed: !this.state.mainCollapsed })
  }

})
