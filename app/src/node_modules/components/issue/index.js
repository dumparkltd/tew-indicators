var React         = require('react')
var Fluxxor       = require('fluxxor')
var FluxMixin     = Fluxxor.FluxMixin(React)
var Router        = require('react-router')

var RouteHandler  = Router.RouteHandler

//helpers
var pluck         = require('lodash.pluck')
var where         = require('lodash.where')
var find          = require('lodash.find')
var result        = require('lodash.result')
var capitalize    = require('capitalize')

var log       = require('debug')('src:components:issue')


module.exports = React.createClass({

  propTypes: {
    flux: React.PropTypes.object
  },

  render: function () {
    var flux = this.props.flux
    log('props', this.props)
    var router = flux.stores.routes
    var issueName = capitalize(router.getCurrentRoute().substring(1))

    var issueData = flux.stores.issues.query({ title: issueName })[0]
    var indicators = flux.stores.indicators.query({ issue: issueData.id })

    log('indicators', indicators)

    log('issueData', issueData)
    return (
      <div className='issue'>
        <h3>Issue</h3>
        <h2>{issueName}</h2>
        <p>{issueData.commentary}</p>
          {indicators.map(function (indicator) {
            return (
              <p onClick={this.handleIndicatorClick(indicator.id)}>{indicator.title}</p>
            )
          }.bind(this))}
      </div>
    )
  },

  handleIndicatorClick: function (indicatorId) {
    return function (e) {
      log('navigate to indicator', indicatorId, e)
    }.bind(this)
  }
})
