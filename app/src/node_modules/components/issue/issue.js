var React           = require('react')
var Fluxxor         = require('fluxxor')
var FluxMixin       = Fluxxor.FluxMixin(React)
var StoreWatchMixin = Fluxxor.StoreWatchMixin
var Router          = require('react-router')

var RouteHandler    = Router.RouteHandler

//helpers
var pluck           = require('lodash.pluck')
var where           = require('lodash.where')
var find            = require('lodash.find')
var result          = require('lodash.result')
var capitalize      = require('capitalize')

var log       = require('debug')('src:components:issue')

function routeToTitle (route) {
  var regexp = /-/g
  return capitalize.words(route.substring(1).replace(regexp, ' '))
}

function titleToRoute (title) {
  var regexp = / /g
  return title.split(regexp).slice(0, 5).join('-').toLowerCase()
}


module.exports = React.createClass({
  mixins: [
    Fluxxor.FluxMixin(React),
    StoreWatchMixin('issues', 'indicators')
  ],

//  propTypes: {
//    flux: React.PropTypes.object
//  },

  getStateFromFlux: function () {
    var flux = this.props.flux
    return {
      issuesLoading: flux.store('issues').isLoading(),
      indicatorsLoading : flux.store("indicators").isLoading(),
    }
  },

  render: function () {
    log('props, state', this.props, this.state)
    var flux = this.getFlux()
    var IssueView
    var IndicatorsView
    var issue
    var indicators

    if (this.state.issuesLoading) {
      IssueView = <h2>Loading...</h2>
    }
    else {
      issue = flux.stores.issues.findOne({ slug: this.props.params.issueSlug })

      IssueView = (
        <div>
          <h2>{issue.title}</h2>
          <p>{issue.commentary}</p>
        </div>
      )
    }

    if (this.state.issuesLoading || this.state.indicatorsLoading) {
      IndicatorsView = <p>Loading...</p>
    }
    else {
      indicators = flux.stores.indicators.query({ issue: issue.id })

      IndicatorsView = (
        <div>
          {
            indicators.map(function (indicator) {
              log('indicator', indicator)
              return (
                <button onClick={this.handleIndicatorClick(indicator.slug)}>{indicator.title}</button>
              )
            }.bind(this))
          }
        </div>
      )
    }

    return (
      <div className='issue'>
        <div>{IssueView}</div>
        <div>{IndicatorsView}</div>
      </div>
    )
  },

  componentWillReceiveProps: function (nextProps) {
    log('nextProps', nextProps)
  },

  handleIndicatorClick: function (indicatorSlug) {
    return function (e) {
      this.getFlux().actions.indicator.select(indicatorSlug)
    }.bind(this)
  }
})
