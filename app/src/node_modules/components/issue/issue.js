var React         = require('react')
var Fluxxor       = require('fluxxor')
var FluxMixin     = Fluxxor.FluxMixin(React)
var Router        = require('react-router')

var RouteHandler  = Router.RouteHandler

//helpers
var pluck         = require('lodash.pluck')
var where         = require('lodash.where')
var find          = require('lodash.find')
var result        = require('lodash.result')
var capitalize    = require('capitalize')

var log       = require('debug')('src:components:issue')

function routeToTitle (route) {
  var regexp = /-/g
  return capitalize.words(route.substring(1).replace(regexp, ' '))
}

function titleToRoute (title) {
  var regexp = / /g
  return title.split(regexp).slice(0, 5).join('-').toLowerCase()
}


module.exports = React.createClass({
  mixins: [
    Fluxxor.FluxMixin(React),
  ],

//  propTypes: {
//    flux: React.PropTypes.object
//  },  

  render: function () {
    return (
      <div className='issue'>
        <h3>Issue</h3>
      </div>
    )
  },
          
  getState : function (props){
    //var issue = this.getFlux().stores.issues.query({ slug: props.paramsissueSlug })
    
    return {
     issueSlug : props.params.issueSlug,
     //issue : issue
    }    
  },

  getInitialState: function () {
    return this.getState(this.props);
  },
  componentWillReceiveProps: function (nextProps) {
    log('nextProps', nextProps)
    this.setState(this.getState(nextProps));
  },

  handleIssueClick: function (indicatorSlug) {
    return function (e) {
      this.getFlux().actions.indicator.select(indicatorSlug)
    }.bind(this)
  }
})
