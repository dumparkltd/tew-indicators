//main
var React       = require('react')


var Snapshot 						= require('./snapshot/chartSnapshot')
var Timeline 						= require('./timeline/chartTimeline')

//helpers
var _ 					= require('lodash')

//logging
var log       	= require('debug')('components:indicator:chartControl')


module.exports = React.createClass({

	propTypes : {
		flux        : React.PropTypes.object,    
    indicator   : React.PropTypes.object, // current indicator
    datasets    : React.PropTypes.array, // datasets/timesteps    
		breakdowns  : React.PropTypes.array, // dimensions ordered by dimension, exluding null dimensions
		groups      : React.PropTypes.array, // groups for each dimension
    data        : React.PropTypes.array, // filtered data by datasets,dimensions&groups (including all 'alls'
    axisScale   : React.PropTypes.number, // the max value
    sortBy      : React.PropTypes.string // one of ["group","value"]    
	},

  render: function () {
		log('props', this.props)
    
    if (this.props.datasets.length === 1) {
      return (
        <Snapshot    
          flux = {this.props.flux}
          indicator = {this.props.indicator}
          dataset = {this.props.datasets[0]}          
          breakdowns = {this.props.breakdowns}
          groups = {this.props.groups}
          data = {this.props.data}
          axisScale = {this.props.axisScale} // for first dataset
          sortBy = {this.props.sortBy}
          sortOptions = {this.props.sortOptions}
          sortDesc = {this.props.indicator.order === 'DESC'}
        />
      )
    } else {
      return (
        <Timeline
          flux = {this.props.flux}
          indicator = {this.props.indicator}
          datasets = {this.props.datasets}          
          breakdowns = {this.props.breakdowns}
          data = {this.props.data}
          axisScale = {this.props.axisScale}
          sortDesc = {this.props.indicator.order === 'DESC'}         
        />        
      )
    }        
		
  }


})
