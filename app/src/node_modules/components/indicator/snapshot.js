//main
var React       = require('react')

//components
var Select      = require('react-select')
var TableHeader	= require('./table-header')
var TableRow		= require('./table-row')

//helpers
var _ 					= require('lodash')

//logging
var log       	= require('debug')('components:indicator:snapshot')

module.exports = React.createClass({

	propTypes : {
		flux: React.PropTypes.object,
		params: React.PropTypes.object,
    data: React.PropTypes.array,
		datasets: React.PropTypes.array,
		breakdowns: React.PropTypes.array,
		indicator: React.PropTypes.object,
		options: React.PropTypes.array
	},

	getInitialState: function () {
		return {
			tableHeaderGroups: [
			'Breakdowns', 'Order', 'Show'
			]
		}
	},

  render: function () {
		log('props', this.props)
		var flux = this.props.flux
		var dateClassName
    var DateComponent

    //set DateComponent
		if (this.props.options.length > 1) {
			dateClassName = 'date-dropdown'
			DateComponent = (
				<Select
					name='indicator-date-dropdown'
					value={this.props.options[0].value}
					options={this.props.options} //TODO remove initial value from options ?
					onChange={this.handleDateSelect} />
			)
		}
		else {
			dateClassName = 'date-header'
			DateComponent = <h3>{this.props.options[0].label}</h3>
		}

		return (
			<div className='snapshot'>
        <div className={dateClassName}>
          {DateComponent}
        </div>
				<table className='table'>
	        <TableHeader breakdowns={this.props.breakdowns} tableHeaderGroups={this.state.tableHeaderGroups} />
					<tbody className='table-body'>
						{_.map(this.props.data, function (d) {
							log('d', d)
							return (
								<TableRow datum={d} />
							)
						}.bind(this))}
					</tbody>
				</table>
			</div>
  )
  },

	componentWillReceiveProps: function (nextProps) {
			this.setState({ shortToTitle: this.getShortToTitle(nextProps.dataGroups) })
	},

	handleDateSelect: function () {
		//TODO
	},

	getShortToTitle: function (dataGroups) {
		var shortToTitle = {}
		_.each(dataGroups, function (dataGroup) {
			shortToTitle[dataGroup.short] = dataGroup.title
		})
		return shortToTitle
	}


})
