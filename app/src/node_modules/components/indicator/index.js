//main
var React       = require('react')
var Fluxxor     = require('fluxxor')

//components
var Table 			= require('react-simple-table')
var FluxMixin   = Fluxxor.FluxMixin(React)

//modules
var joinData		= require('./join-data')
var getDatasets		= require('./get-datasets')

//helpers
// var keys 				= require('lodash.keys')
var capitalize 	= require('capitalize')
var extend 			= require('xtend')
var _ 					= require('lodash')

//logging
var log       	= require('debug')('src:components:indicator')

function findMatches (property, values) {
	return function (d) {
		return _.contains(values, d[property])
	}
}


module.exports = React.createClass({

	propTypes : {
		flux: React.PropTypes.object,
		params: React.PropTypes.object
	},

	getInitialState: function () {
		return {

		}
	},

  render: function () {
		log('props', this.props)
		var flux = this.props.flux

		//what is my indicator?
		var indicator = flux.stores.indicators.findOne({ slug: this.props.params.indicatorSlug })
		log('indicator', indicator)

		//what are my data?
		var dataQuery = extend(this.props.query, { indicator: indicator.id })
		var data = flux.stores.data.query(dataQuery)
		log('data', data)
		//what are my breakdowns?
		var breakdownIds = indicator.breakdowns.split(',')
		var breakdowns = flux.stores.dataBreakdowns.filter(findMatches('breakdowns', breakdownIds))
		log('breakdowns', breakdowns)
		//stick 'em together by year TODO: catch categorial data	
    var datasets = getDatasets(data,flux)
		var joinedData = joinData(data, datasets)
		log('joinedData', joinedData)

		return (
			<div className='indicator'>
				<h2>{indicator.title}</h2>
				<h3>[Placeholder]: Snapshot, Timeline</h3>
			</div>
    )
		// Indicator Title
		// View Snapshot, Timeline

		//Year: (most recent Year)

		//breakdown 1: breakdown 2:... Order:


		// var columns = Object.keys(data[0]).map(function (key) { return capitalize(key) })
		//
    // return (
		// 	<div className='indicator'>
		// 		<h2>{indicator.title}</h2>
		// 		<Table className='indicator-table table' columns={columns} data={data}/>
		// 	</div>
    // )

  },

})
