//main
var React               = require('react')
var Fluxxor             = require('fluxxor')

//helpe rs 
var FluxMixin           = Fluxxor.FluxMixin(React)
var uniq                = require('lodash.uniq')

//components
var FiltersGroup    = require('components/filters-group')
var IndicatorView       = require('components/indicator-view')

//debugging
var log             = require('debug')('src:components:main:index')

module.exports = React.createClass({

  mixins: [
    FluxMixin
  ],

  render: function () {
    var flux             = this.getFlux()
    var groupTypes       = ['ethnicity', "sex", "age", 'disability', 'sogii']
    var indicatorId      = 'unempl'
    var indicatorLabel   = 'Unemployment'
    var queryObject      = {}

    var currentQuery     = flux.stores.route.getCurrentQuery()

    var queryObject      = groupTypes.reduce(function (memo, groupType) {
      memo[groupType] = currentQuery[groupType] || ''
      return memo
    }, {})

    var data = flux.stores.data.query(currentQuery)
    log('data', data)

    var optionObject    = groupTypes.reduce(function (memo, groupType) {
      var availableVals = data.reduce(function (arr, d) {
        if (d[groupType] !== currentQuery[groupType]) arr.push(d[groupType])
        return arr
      }, [])
      memo[groupType] = uniq(availableVals)
      return memo
    }, {})

    //using lodash.where -> array
    var datum             = (data.length === 1) ? data[0] : { value: 'select groups' }

    log('datum', datum)

    return (
      <div>
        <FiltersGroup groupTypes={groupTypes} flux={flux} optionObject={optionObject} />
        <IndicatorView 
          id={'indicator-view-'+indicatorId} 
          header={indicatorLabel}
          datum={datum}  />
      </div>
    )

  },

})