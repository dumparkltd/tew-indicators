var React     = require('react')
var Fluxxor   = require('fluxxor')
var Router    = require('react-router')
var State     = Router.State
var FluxMixin = Fluxxor.FluxMixin(React)
var Select    = require('react-select')

var log       = require('debug')('src:components:main:index')



module.exports = React.createClass({

  contextTypes: {
    router: React.PropTypes.func.isRequired
  },

  mixins: [
    FluxMixin
  ],

  render: function () {
    var params  = this.context.router.getCurrentParams() //not used
    var query   = this.context.router.getCurrentQuery()
    //on render fetch latest data
    var data    = this.getFlux().stores.ethnicity.query(params)
    log('data', data)
    log('params', params)
    log('props', this.props)
    log('context', this.context)

    var value = query.ethnicity || null

    var options = data.map(function (d) {
      return {
        value: d.id,
        label: d.label
      }
    })

    return (
      <div>
        <Select
          name='select-ethnicity'
          multi={true}
          value={value}
          options={options}
          onChange={this.handleSelectGroup} />
      </div>


    )

  },

  handleSelectGroup: function (val) {
    //TODO use props for generic select component
    var groupType       = 'ethnicity'
    var currentQuery    = this.context.router.getCurrentQuery()
    var selectedValues  = (val.indexOf(',') !== -1) ? val.split(',') : [val]
    
    log('val', val)
    log(groupType, selectedValues, currentQuery)

    var actions = this.getFlux().actions.group.select(groupType, selectedValues, currentQuery)



  },

  componentDidMount: function () {

  }
})