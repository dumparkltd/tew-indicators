//main
var React               = require('react')
var Fluxxor             = require('fluxxor')

var Router        = require('react-router')

var RouteHandler  = Router.RouteHandler

//mixins
var FluxMixin           = Fluxxor.FluxMixin(React)
var StoreWatchMixin     = Fluxxor.StoreWatchMixin

//helpers
var uniq                = require('lodash.uniq')
var pluck               = require('lodash.pluck')
var contains            = require('lodash.contains')
var matches             = require('lodash.matches')
var omit                = require('lodash.omit')
var each                = require('lodash.foreach')
var result              = require('lodash.result')
var where               = require('lodash.where')
var qs                  = require('qs')

//debugging
var log             = require('debug')('src:components:main:index')

module.exports = React.createClass({

  mixins: [
    FluxMixin, 
    StoreWatchMixin(
      'data',
      'dataBreakdowns',
      'dataGroups',
      'datasets',
      'dataTypes',
      'indicators',
      'issues',
      'recommendations'
    )
  ],

  propTypes: {
    flux: React.PropTypes.object
  },

  contextTypes: {
    router: React.PropTypes.func
  },

  getStateFromFlux: function () {
    var flux = this.getFlux();
    return {
      dataLoading : flux.store("data").isLoading(),
      dataBreakdownLoading : flux.store("dataBreakdowns").isLoading(),
      dataGroupsLoading : flux.store("dataGroups").isLoading(),
      datasets : flux.store("datasets").isLoading(),
      dataTypes : flux.store("dataTypes").isLoading(),
      indicators : flux.store("indicators").isLoading(),
      issues : flux.store("issues").isLoading(),
      recommendations : flux.store("recommendations").isLoading(),      
    }
  },

  render: function () {
    var flux = this.getFlux()
    
    log('rendering main ...')

    return (
      <div className='home' >
        <RouteHandler flux={flux}/>
        <div className='footer' ></div>
      </div>
    )

  }


})
