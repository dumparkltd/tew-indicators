var React         = require('react')

var log       = require('debug')('src:components:nav-carousel')

module.exports = React.createClass({

  propTypes: {
    nextSlug: React.PropTypes.string,
    previousSlug: React.PropTypes.string,
    indicatorSlug: React.PropTypes.string,
    issueSlug: React.PropTypes.string,
    flux: React.PropTypes.object
  },

  render: function () {
    log('props', this.props)


    return (
      <div className="hrc-nav-carousel pull-right">
        <ul className="hrc-nav-carousel-list list-inline">
          <li className="hrc-nav-carousel-li-previous">
            <a href="#" className={'btn'} onClick={this.handleIndicatorClick(this.props.previousSlug)} title="Next Indicator">
              <div className="small hrc-nav-carousel-label" >
                Previous
              </div>
              <div className="hrc-carousel-icon hrc-carousel-icon-previous">
                <div className="icon-previous"></div>
              </div>
            </a>
          </li>
          <li className="hrc-nav-carousel-li-next">
            <a href="#" className={'btn'}  onClick={this.handleIndicatorClick(this.props.nextSlug)}  title="Next Indicator">
              <div className="small hrc-nav-carousel-label" >
                Next
              </div>
              <div className="hrc-carousel-icon hrc-carousel-icon-next">
                <div className="icon-next"></div>
              </div>
            </a>
          </li>
          <li className="hrc-nav-carousel-li-back">
            <a href="#" className={'btn'}  onClick={this.handleIssueClick(this.props.issueSlug)}  title="Back to Issue">
              <div className="small hrc-nav-carousel-label" >
                Back
              </div>
              <div className="hrc-carousel-icon hrc-carousel-icon-close">
                <div className="icon-close"></div>
              </div>
            </a>
          </li>
        </ul>
      </div>


    )
  },

  handleIssueClick: function (issueSlug) {
    log('init', issueSlug)
    var self = this
    return function (e) {
      e.preventDefault()
      log(e)
      self.props.flux.actions.issue.select(issueSlug)
    }
  },

  handleIndicatorClick: function (indicatorSlug) {
    log('init', indicatorSlug)
    var self = this
    return function (e) {
      e.preventDefault()
      log(e)
      self.props.flux.actions.indicator.select(indicatorSlug)
    }
  }


})
