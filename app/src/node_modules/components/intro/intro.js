var React         = require('react')
var Fluxxor       = require('fluxxor')
var StoreWatchMixin = Fluxxor.StoreWatchMixin


//helpers
var _         = require('lodash')

var log       = require('debug')('src:components:intro')


module.exports = React.createClass({
  mixins: [
    Fluxxor.FluxMixin(React),
    StoreWatchMixin('issues')
  ],
  
  getStateFromFlux: function () {
    var flux = this.props.flux
    return {
      issuesLoading: flux.store('issues').isLoading()      
    }
  },  

  render: function () {

    log('props, state', this.props, this.state)
    var flux = this.getFlux()    
    var IssueSelectView
    var issues
    
    if (this.state.issuesLoading) {
      IssueSelectView = <p>Loading...</p>
    } 
    else {
      issues = flux.stores.issues.data
      log ('issues',issues)
      IssueSelectView = (
        <ul className="list-inline">
          {
            issues.map(function (issue) {
              log('issue', issue)
              return (
                <li>
                  <button className='btn btn-primary' onClick={this.handleIssueClick(issue.slug)}>
                    <span className={'icon-'+ issue.slug}></span>
                    {issue.title}
                  </button>
                </li>  
              )
            }.bind(this))
          }        
        </ul>
      )
    }
    
    return (
      <div className='intro text-center'>
        <div className='container'>
          <div className='row'>
            <div className='col-md-8 col-md-offset-2'>
              <h1> Tracking Equality at Work </h1>
              <p className='lead'>
                It is a human right to be treated fairly at every point of the employment process 
                whether it is getting a job, fair pay, or promotion pathways. Like schools, homes and the 
                community, workplaces are environments in which human rights must live.
              </p>
              <p>
                <h5> "Tracking Equality at Work" is an evidential base for monitoring fairness at work. </h5>
                Indicators are grouped under four issues and show the outcomes for different population 
                groups over time. These indicators provide information about how close or how far from 
                equality each population group is.
              </p>
            </div>
          </div>
        </div>
        <div className='container'>
          <div className='row'>
            <div className="hint"> Select </div>
            <h2> Issue </h2>
          </div>
        </div>
        {IssueSelectView}
      </div>
    )
  },

  handleIssueClick: function (issueSlug) {
    return function (e) {
      this.getFlux().actions.issue.select(issueSlug)
    }.bind(this)
  }
})
