var React       = require('react')
var Fluxxor     = require('fluxxor')
var FluxMixin   = Fluxxor.FluxMixin(React)
var Select      = require('react-select')
var _           = require('lodash')


var log       = require('debug')('src:components:select-group:index')

module.exports = React.createClass({

  propTypes: {
    flux: React.PropTypes.func.isRequired,
    groupType: React.PropTypes.string.isRequired
  },

  mixins: [
    FluxMixin
  ],

  render: function () {
    var flux          = this.getFlux()
    var groupType    = this.props.groupType
    var params        = flux.stores.route.getCurrentParams() //not used
    var query         = flux.stores.route.getCurrentQuery()
    var defaultKey    = this.props.defaultKey

    log('groupType', groupType)

    //on render fetch latest data
    var groupData     = flux.stores[groupType].query()
    var defaultValue  = result(find(groupData, { id: defaultKey }), 'label')
    var value         = result(find(groupData, { id: query[groupType]}), 'label') || defaultValue

    var options       = _.map(this.props.options, function (option) {
      log('option', option)
      return {
        value: option,
        label: _.result(_.find(groupData, { id: option }), 'label')
      }
    })

    log('groupData', groupData)
    log('options', options)
    log('props', this.props)
    log('value', value)
    log('defaultValue', defaultValue)

    return (
      <Select
        name={'select-'+groupType}
        // multi-select disabled for time being
        // multi={true}
        value={value}
        options={options}
        onChange={this.handleOnChange} />

    )
  },

  handleOnChange: function (val) {
    var selectedValues  = (val.indexOf(',') !== -1) ? val.split(',') : [val]
    var groupType       = this.props.groupType

    this.getFlux().actions.group.update(groupType, selectedValues)
  }
})
